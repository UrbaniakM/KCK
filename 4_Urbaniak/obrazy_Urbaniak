from matplotlib import pyplot as plt
from skimage import data, io, measure, color, feature, filters, exposure, img_as_ubyte, morphology
import numpy as np

def detect_edges(image, n):
    subPlt = plt.subplot(7,3,n+1)
    subPlt.axis('off')
    percentileP, percentileK = np.percentile(image,(2,98))
    imageGray = exposure.rescale_intensity(image,in_range=(percentileP,percentileK))
    imageGray = color.rgb2grey(imageGray)
    imageGray = morphology.dilation(imageGray)
    imageGray = morphology.erosion(imageGray)
    for i in range(3):
        #imageGray = morphology.dilation(imageGray)
        imageGray = morphology.erosion(imageGray)
    edges = measure.find_contours(imageGray, level=0.3, fully_connected='low', positive_orientation='high')
    for n, edge in enumerate(edges):
        #coords = measure.approximate_polygon(edge, tolerance=5.5)
        coords = edge
        subPlt.plot(coords[:, 1], coords[:, 0], linewidth=1)
    subPlt.plot(0,0)
    io.imshow(image)

def get_histogram(image,n):
    dane = img_as_ubyte(image)
    histo, x = np.histogram(dane, range(0,256), density=True);
    subPlt = plt.subplot(7,3,n+1)
    subPlt.plot(histo, linewidth=1)

def histograms(images):
    plt.figure(figsize=(15,15),facecolor='black')
    for n,image in enumerate(images):
        get_histogram(image,n)

    plt.tight_layout()
    plt.savefig('histo_Urbaniak.pdf')
    plt.close()

if __name__ == '__main__':

    images = io.ImageCollection('images/*.jpg')

    plt.figure(figsize=(15,15),facecolor='black')
    for n,image in enumerate(images):
        detect_edges(image,n)
    plt.savefig('obrazy_Urbaniak.pdf')   
